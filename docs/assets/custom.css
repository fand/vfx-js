html,
body {
    overflow-x: hidden;
}

/** Force dark mode */
:root {
    --hl-0: var(--dark-hl-0) !important;
    --hl-1: var(--dark-hl-1) !important;
    --hl-2: var(--dark-hl-2) !important;
    --hl-3: var(--dark-hl-3) !important;
    --hl-4: var(--dark-hl-4) !important;
    --hl-5: var(--dark-hl-5) !important;
    --code-background: var(--dark-code-background) !important;
}

:root {
    --color-background: var(--dark-color-background) !important;
    --color-background-secondary: var(
        --dark-color-background-secondary
    ) !important;
    --color-background-warning: var(--dark-color-background-warning) !important;
    --color-warning-text: var(--dark-color-warning-text) !important;
    --color-icon-background: var(--dark-color-icon-background) !important;
    --color-accent: var(--dark-color-accent) !important;
    --color-active-menu-item: var(--dark-color-active-menu-item) !important;
    --color-text: var(--dark-color-text) !important;
    --color-text-aside: var(--dark-color-text-aside) !important;
    --color-link: var(--dark-color-link) !important;
    --color-focus-outline: var(--dark-color-focus-outline) !important;
    --color-ts-keyword: var(--dark-color-ts-keyword) !important;
    --color-ts-module: var(--dark-color-ts-module) !important;
    --color-ts-namespace: var(--dark-color-ts-namespace) !important;
    --color-ts-enum: var(--dark-color-ts-enum) !important;
    --color-ts-enum-member: var(--dark-color-ts-enum-member) !important;
    --color-ts-variable: var(--dark-color-ts-variable) !important;
    --color-ts-function: var(--dark-color-ts-function) !important;
    --color-ts-class: var(--dark-color-ts-class) !important;
    --color-ts-interface: var(--dark-color-ts-interface) !important;
    --color-ts-constructor: var(--dark-color-ts-constructor) !important;
    --color-ts-property: var(--dark-color-ts-property) !important;
    --color-ts-method: var(--dark-color-ts-method) !important;
    --color-ts-call-signature: var(--dark-color-ts-call-signature) !important;
    --color-ts-index-signature: var(--dark-color-ts-index-signature) !important;
    --color-ts-constructor-signature: var(
        --dark-color-ts-constructor-signature
    ) !important;
    --color-ts-parameter: var(--dark-color-ts-parameter) !important;
    --color-ts-type-parameter: var(--dark-color-ts-type-parameter) !important;
    --color-ts-accessor: var(--dark-color-ts-accessor) !important;
    --color-ts-get-signature: var(--dark-color-ts-get-signature) !important;
    --color-ts-set-signature: var(--dark-color-ts-set-signature) !important;
    --color-ts-type-alias: var(--dark-color-ts-type-alias) !important;
    --color-document: var(--dark-color-document) !important;
    --external-icon: var(--dark-external-icon) !important;
    --color-scheme: var(--dark-color-scheme) !important;
}

/* Fix line height */
.tsd-typography {
    line-height: 1.5 !important;
}
.tsd-signature {
    line-height: 1.5 !important;
}

/* Hide right sidebar */
.container-main {
    grid-template-columns: minmax(0, 1fr) minmax(0, 3fr);
    grid-template-areas: "sidebar content";
}
.page-menu {
    display: none !important;
}

/* Fix header style */
.container {
    padding: 0 1rem !important;
}
.tsd-page-toolbar {
    background: transparent;
    border: none;
    padding-top: 1rem;
    padding-bottom: 1rem;
}
@media (min-width: 770px) {
    .tsd-page-toolbar {
        padding-bottom: 0;
    }
}

#tsd-toolbar-links {
    right: 1rem;
}
#tsd-toolbar-links a {
    margin-left: 1rem !important;
}
.title {
    color: transparent !important;
}
.title:after {
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    content: "VFX-JS API docs";
    color: var(--color-text);
    line-height: 1;
}

/* Align main section with the sidebar */
.tsd-page-title > h2 {
    margin-top: 0;
}
h1:not(.tsd-page-title h1) {
    margin-top: 0;
}

/* Make margins between params larger */
li.tsd-parameter {
    margin-bottom: 3rem;
}
li.tsd-parameter > h5 {
    margin-bottom: 1rem 0;
}
.tsd-type-declaration > h4 {
    margin: 2rem 0;
}
